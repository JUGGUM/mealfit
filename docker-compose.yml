version: '3.8' # Docker Compose 파일 버전

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      # DB 호스트를 'db' 서비스 이름으로 변경합니다.
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/mealfit
      SPRING_DATASOURCE_USERNAME: mealuser
      SPRING_DATASOURCE_PASSWORD: mealpass
      SPRING_JPA_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    volumes:
      - ./build/libs/mealfit-0.0.1-SNAPSHOT.jar:/app/app.jar
    depends_on: # 'db' 서비스가 먼저 시작되도록 의존성 추가
      - db
      - kafka
    networks:
      - mealfit-net

  db: # PostgreSQL 데이터베이스 서비스 추가
    image: postgres:15-alpine # PostgreSQL 이미지 (더 가벼운 alpine 버전 추천)
    environment:
      POSTGRES_DB: mealfit
      POSTGRES_USER: mealuser
      POSTGRES_PASSWORD: mealpass
    ports: # 외부에서 DB 접속이 필요하다면 주석 해제 (앱 컨테이너에서는 필요 없음)
      - "5432:5432"
    volumes: # DB 데이터 지속성을 위한 볼륨 설정 (중요!)
      - db_data:/var/lib/postgresql/data
    networks:
      - mealfit-net
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - mealfit-net

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
       - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - mealfit-net
    depends_on:
      - zookeeper

volumes: # DB 데이터 볼륨 정의
  db_data:

networks:
  mealfit-net: